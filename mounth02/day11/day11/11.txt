前情回顾

1. 线程

   threading --> Thread() 创建线程对象
                 start() 启动线程
                 join()  回收线程

   线程属性： name  is_alive()  daemon

   自定义线程类： 继承Thread 重写__init__,run

2. 线程同步互斥

   线程通信： 全局变量

   互斥方法: Event()  wait()  set  clear()
            Lock()  acquire()  release()

   死锁 ： 造成程序的阻塞无法运行

3. GIL 问题 ： 给解释器加锁，在解释线程时，同一时刻只能解释一个线程。

    * python线程适合多阻塞的IO并发操作

4. 进程线程的区别，场景

练习: 基于process多进程并发

ftp 文件服务

1. 技术点

   * tcp传输
   * 数据并发： 多线程并发

2. 结构设计

   类封装

3. 功能模块

   * 网络构建
   * 查看文件列表
   * 下载文件
   * 上传文件

4. 协议确定

   查看文件列表 ： L
   下载文件： G
   上传文件: P
   退出： Q

作业 ： 1. ftp代码过一遍
       2. 二进制转换，http协议，httpserver1.0













